/* tslint:disable */
/* eslint-disable */
/**
 * onecx-extensions-bff
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import type {
  ConfigRequest,
  ConfigResponse,
  ProblemDetailResponse,
} from '../models/index';
import {
  ConfigRequestFromJSON,
  ConfigRequestToJSON,
  ConfigResponseFromJSON,
  ConfigResponseToJSON,
  ProblemDetailResponseFromJSON,
  ProblemDetailResponseToJSON,
} from '../models/index';

export interface GetConfigurationRequest {
  configRequest: ConfigRequest;
}

/**
 *
 */
export class ExtensionsInternalApi extends runtime.BaseAPI {
  /**
   * Get extension configuration
   */
  async getConfigurationRaw(
    requestParameters: GetConfigurationRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<ConfigResponse>> {
    if (
      requestParameters.configRequest === null ||
      requestParameters.configRequest === undefined
    ) {
      throw new runtime.RequiredError(
        'configRequest',
        'Required parameter requestParameters.configRequest was null or undefined when calling getConfiguration.'
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request(
      {
        path: `/config`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: ConfigRequestToJSON(requestParameters.configRequest),
      },
      initOverrides
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      ConfigResponseFromJSON(jsonValue)
    );
  }

  /**
   * Get extension configuration
   */
  async getConfiguration(
    requestParameters: GetConfigurationRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<ConfigResponse> {
    const response = await this.getConfigurationRaw(
      requestParameters,
      initOverrides
    );
    return await response.value();
  }
}
